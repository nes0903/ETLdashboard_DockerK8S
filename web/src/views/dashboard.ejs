<!DOCTYPE html>
<html>
<head>
    <title>ETL 대시보드</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <style>
        .card { margin-bottom: 20px; }
        .status-success { color: green; }
        .status-error { color: red; }
    </style>
</head>
<body>
    <div class="container mt-4">
        <h1>ETL 대시보드</h1>
        
        <div class="row">
            <div class="col-md-6">
                <div class="card">
                    <div class="card-header">
                        ETL 작업 상태
                    </div>
                    <div class="card-body">
                        <div id="etl-status"></div>
                    </div>
                </div>
            </div>
            
            <div class="col-md-6">
                <div class="card">
                    <div class="card-header">
                        위해상품 데이터
                    </div>
                    <div class="card-body">
                        <div id="products-data"></div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script>
        // ETL 상태 데이터 가져오기
        async function fetchETLStatus() {
            try {
                const response = await fetch('/api/etl-status');
                const data = await response.json();
                const statusDiv = document.getElementById('etl-status');
                
                let html = '<table class="table">';
                html += '<thead><tr><th>작업명</th><th>상태</th><th>시간</th></tr></thead>';
                html += '<tbody>';
                
                data.forEach(item => {
                    const statusClass = item.status === 'success' ? 'status-success' : 'status-error';
                    html += `<tr>
                        <td>${item.process_name}</td>
                        <td class="${statusClass}">${item.status}</td>
                        <td>${new Date(item.created_at).toLocaleString()}</td>
                    </tr>`;
                });
                
                html += '</tbody></table>';
                statusDiv.innerHTML = html;
            } catch (error) {
                console.error('Error fetching ETL status:', error);
            }
        }

        // 위해상품 데이터 가져오기
        async function fetchProductsData() {
            try {
                const response = await fetch('/api/dangerous-products');
                const data = await response.json();
                const productsDiv = document.getElementById('products-data');
                
                let html = '<table class="table">';
                html += '<thead><tr><th>제품명</th><th>제품유형</th><th>제조국</th></tr></thead>';
                html += '<tbody>';
                
                data.forEach(product => {
                    html += `<tr>
                        <td>${product.제품명}</td>
                        <td>${product.제품유형}</td>
                        <td>${product.제조국}</td>
                    </tr>`;
                });
                
                html += '</tbody></table>';
                productsDiv.innerHTML = html;
            } catch (error) {
                console.error('Error fetching products data:', error);
            }
        }

        // 페이지 로드 시 데이터 가져오기
        document.addEventListener('DOMContentLoaded', () => {
            fetchETLStatus();
            fetchProductsData();
            
            // 30초마다 데이터 갱신
            setInterval(() => {
                fetchETLStatus();
                fetchProductsData();
            }, 30000);
        });
    </script>
</body>
</html> 